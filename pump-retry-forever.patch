--- pump-0.8.11/pump.c.retryforever	Fri Jul 20 10:42:10 2001
+++ pump-0.8.11/pump.c	Fri Jul 20 11:03:01 2001
@@ -386,7 +386,36 @@
 	closest = -1;
 	if (numInterfaces) {
 	    for (i = 0; i < numInterfaces; i++)
-		if ((intf[i].set & PUMP_INTFINFO_HAS_LEASE) && 
+		/* if this interface has an expired lease due to
+		 * renewal failures and it's time to try again to
+		 * get a new lease, then try again
+		 *
+		 * note: this trys every 30 secs FOREVER; this may
+		 * or may not be desirable.  could also have a back-off
+		 * hueristic that increases the retry delay after each
+		 * failed attempt and a maximum number of tries or
+		 * maximum period of time to try for.
+		 */
+		if ((intf[i].set & PUMP_INTFINFO_NEEDS_NEWLEASE) &&
+		   (intf[i].renewAt < pumpUptime())) {
+		    if (pumpDhcpRun(intf[i].device, 0, 
+			  intf[i].reqLease,
+			  intf[i].set & PUMP_NETINFO_HAS_HOSTNAME
+			    ? intf[i].hostname : NULL,
+			  intf + i, overrides)) {
+
+			    /* failed to get a new lease, so try
+			     * again in 30 seconds
+                             */
+			    intf[i].renewAt = pumpUptime() + 30;
+
+		    } else {
+			intf[i].set &= ~PUMP_INTFINFO_NEEDS_NEWLEASE;
+			callScript(overrides->script, PUMP_SCRIPT_NEWLEASE,
+				   &intf[i]);
+                    }
+		}
+		else if ((intf[i].set & PUMP_INTFINFO_HAS_LEASE) && 
 			(closest == -1 || 
 			       (intf[closest].renewAt > intf[i].renewAt)))
 		    closest = i;
@@ -398,7 +427,12 @@
 				"failed to renew lease for device %s",
 				intf[closest].device);
 
-			if ((intf[closest].renewAt += pumpUptime() + 30) >
+			/* if the renewal failed, then set renewAt to
+			 * try again in 30 seconds AND then if renewAt's
+			 * value is after the lease expiration then
+			 * try to get a fresh lease for the interface
+			 */
+			if ((intf[closest].renewAt = pumpUptime() + 30) >
 			    intf[closest].leaseExpiration) {
 			    o = overrides;
 			    while (*o->intf.device &&
@@ -408,6 +442,8 @@
 			    if (!*o->intf.device) o = overrides;
 
 			    intf[closest].set &= ~PUMP_INTFINFO_HAS_LEASE;
+			    intf[closest].set |= PUMP_INTFINFO_NEEDS_NEWLEASE;
+
 
 			    if (pumpDhcpRun(intf[closest].device, 
 				  intf[closest].flags, 
@@ -415,6 +451,16 @@
 				  intf[closest].set & PUMP_NETINFO_HAS_HOSTNAME
 				    ? intf[closest].hostname : NULL,
 				  intf + closest, o)) {
+ 
+ 				    /* failed to get a new lease, so try
+				     * again in 30 seconds
+                                      */
+				    intf[closest].renewAt = pumpUptime() + 30;
+#if 0
+ 	/* ifdef this out since we now try more than once to get
+ 	 * a new lease and don't, therefore, want to remove the interface
+ 	 */
+ 
 				if (numInterfaces == 1) {
 				    callScript(o->script, PUMP_SCRIPT_DOWN,
 					       &intf[closest]);
@@ -426,7 +472,10 @@
 
 				intf[i] = intf[numInterfaces - 1];
 				numInterfaces--;
+#endif
 			    } else {
+				intf[closest].set &=
+					~PUMP_INTFINFO_NEEDS_NEWLEASE;
 				callScript(o->script, PUMP_SCRIPT_NEWLEASE,
 					   &intf[closest]);
                             }
--- pump-0.8.11/pump.h.retryforever	Fri Jul 20 10:42:10 2001
+++ pump-0.8.11/pump.h	Fri Jul 20 10:42:10 2001
@@ -23,6 +23,7 @@
 #define PUMP_INTFINFO_HAS_LEASE		(1 << 7)
 #define PUMP_INTFINFO_HAS_REQLEASE	(1 << 8)
 #define PUMP_INTFINFO_HAS_NEXTSERVER	(1 << 9)
+#define PUMP_INTFINFO_NEEDS_NEWLEASE	(1 << 10)
 
 #define PUMP_NETINFO_HAS_LOGSRVS	(1 << 15)
 #define PUMP_NETINFO_HAS_LPRSRVS	(1 << 16)
--- pump-0.8.11/dhcp.c.sopwith	Mon Jul 23 19:18:29 2001
+++ pump-0.8.11/dhcp.c	Mon Jul 23 19:18:49 2001
@@ -47,6 +47,7 @@
 #include <sys/wait.h>
 #include <syslog.h>
 #include <unistd.h>
+#include <time.h>
 
 #include "pump.h"
 
